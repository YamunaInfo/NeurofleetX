import React from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LineChart, Line, PieChart, Pie, Cell } from 'recharts';
import { BarChart3, TrendingUp, Clock, Users, Download, FileText } from 'lucide-react';
import { trafficAnalyticsData } from '../../utils/mockData';

export const Analytics: React.FC = () => {
  const pieData = [
    { name: 'Cars', value: 65, color: '#3B82F6' },
    { name: 'Trucks', value: 20, color: '#10B981' },
    { name: 'Motorcycles', value: 15, color: '#F59E0B' }
  ];

  const handleExportCSV = () => {
    const csvData = trafficAnalyticsData.hourlyVolume.map(item => 
      `${item.time},${item.cars},${item.trucks},${item.motorcycles}`
    ).join('\n');
    const header = 'Time,Cars,Trucks,Motorcycles\n';
    const blob = new Blob([header + csvData], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'traffic_analytics.csv';
    a.click();
    window.URL.revokeObjectURL(url);
  };

  const handleExportPDF = () => {
    // Create a simple PDF-like report
    const reportData = {
      title: 'Traffic Analytics Report',
      date: new Date().toLocaleDateString(),
      time: new Date().toLocaleTimeString(),
      summary: {
        totalVehicles: trafficAnalyticsData.hourlyVolume.reduce((sum, item) => sum + item.cars + item.trucks + item.motorcycles, 0),
        peakHour: '8:00 AM - 9:00 AM',
        averageSpeed: '42 km/h',
        systemUptime: '99.8%'
      },
      hourlyData: trafficAnalyticsData.hourlyVolume
    };

    // Convert to formatted text (simulating PDF content)
    const pdfContent = `
TRAFFIC ANALYTICS REPORT
========================
Generated: ${reportData.date} at ${reportData.time}

EXECUTIVE SUMMARY
-----------------
Total Vehicles Processed: ${reportData.summary.totalVehicles}
Peak Traffic Hour: ${reportData.summary.peakHour}
Average Speed: ${reportData.summary.averageSpeed}
System Uptime: ${reportData.summary.systemUptime}

HOURLY TRAFFIC VOLUME
---------------------
${reportData.hourlyData.map(item => 
  `${item.time}: Cars(${item.cars}) Trucks(${item.trucks}) Motorcycles(${item.motorcycles})`
).join('\n')}

RECOMMENDATIONS
---------------
1. Optimize signal timing during peak hours (8-9 AM, 6-7 PM)
2. Consider additional lanes for high-traffic corridors
3. Implement dynamic routing for emergency vehicles
4. Monitor weather impact on traffic patterns

Report generated by Neuro-Adaptive Traffic Dashboard
    `;

    // Create and download as text file (simulating PDF)
    const blob = new Blob([pdfContent], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `traffic_analytics_report_${new Date().toISOString().split('T')[0]}.txt`;
    a.click();
    window.URL.revokeObjectURL(url);
    
    alert('Traffic Analytics Report downloaded successfully!');
  };
  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h2 className="text-3xl font-bold text-white flex items-center">
          <BarChart3 className="w-8 h-8 mr-3 text-blue-400" />
          Traffic Analytics
        </h2>
        
        <div className="flex space-x-3">
          <button 
            onClick={handleExportCSV}
            className="bg-green-600 hover:bg-green-700 px-4 py-2 rounded-lg text-white font-medium transition-colors flex items-center"
          >
            <Download className="w-4 h-4 mr-2" />
            Export CSV
          </button>
          <button 
            onClick={handleExportPDF}
            className="bg-red-600 hover:bg-red-700 px-4 py-2 rounded-lg text-white font-medium transition-colors flex items-center"
          >
            <FileText className="w-4 h-4 mr-2" />
            Export PDF
          </button>
          <select className="bg-gray-700 text-white px-4 py-2 rounded-lg border border-gray-600">
            <option>Last 24 Hours</option>
            <option>Last Week</option>
            <option>Last Month</option>
          </select>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white rounded-2xl p-6 shadow-lg">
          <div className="flex items-center mb-4">
            <BarChart3 className="w-6 h-6 text-blue-600 mr-2" />
            <h3 className="text-xl font-bold text-gray-800">Hourly Traffic Volume</h3>
          </div>
          <div className="h-80">
            <ResponsiveContainer width="100%" height="100%">
              <BarChart data={trafficAnalyticsData.hourlyVolume}>
                <CartesianGrid strokeDasharray="3 3" stroke="#374151" />
                <XAxis dataKey="time" stroke="#9CA3AF" />
                <YAxis stroke="#9CA3AF" />
                <Tooltip 
                  contentStyle={{ 
                    backgroundColor: '#1F2937', 
                    border: '1px solid #374151',
                    borderRadius: '8px'
                  }}
                />
                <Bar dataKey="cars" fill="#3B82F6" />
                <Bar dataKey="trucks" fill="#10B981" />
                <Bar dataKey="motorcycles" fill="#F59E0B" />
              </BarChart>
            </ResponsiveContainer>
          </div>
        </div>

        <div className="bg-white rounded-2xl p-6 shadow-lg">
          <div className="flex items-center mb-4">
            <TrendingUp className="w-6 h-6 text-purple-600 mr-2" />
            <h3 className="text-xl font-bold text-gray-800">Speed vs Volume</h3>
          </div>
          <div className="h-80">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart data={trafficAnalyticsData.speedVsVolume}>
                <CartesianGrid strokeDasharray="3 3" stroke="#374151" />
                <XAxis dataKey="time" stroke="#9CA3AF" />
                <YAxis stroke="#9CA3AF" />
                <Tooltip 
                  contentStyle={{ 
                    backgroundColor: '#1F2937', 
                    border: '1px solid #374151',
                    borderRadius: '8px'
                  }}
                />
                <Line type="monotone" dataKey="speed" stroke="#06B6D4" strokeWidth={3} />
                <Line type="monotone" dataKey="volume" stroke="#8B5CF6" strokeWidth={3} />
              </LineChart>
            </ResponsiveContainer>
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <div className="bg-white rounded-2xl p-6 shadow-lg">
          <div className="flex items-center mb-4">
            <Clock className="w-6 h-6 text-green-600 mr-2" />
            <h3 className="text-lg font-bold text-gray-800">System Health</h3>
          </div>
          
          <div className="space-y-4">
            <div className="flex justify-between items-center">
              <span className="text-gray-600">System Uptime</span>
              <span className="bg-green-500 px-3 py-1 rounded-full text-sm text-white">99.8%</span>
            </div>
            
            <div className="flex justify-between items-center">
              <span className="text-gray-600">Response Time</span>
              <span className="text-blue-600 font-medium">{"< 100ms"}</span>
            </div>
            
            <div className="flex justify-between items-center">
              <span className="text-gray-600">Data Accuracy</span>
              <span className="bg-green-500 px-3 py-1 rounded-full text-sm text-white">98.2%</span>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-2xl p-6 shadow-lg">
          <div className="flex items-center mb-4">
            <Users className="w-6 h-6 text-yellow-600 mr-2" />
            <h3 className="text-lg font-bold text-gray-800">Peak Hour Analysis</h3>
          </div>
          
          <div className="space-y-4">
            <div>
              <h4 className="text-gray-800 font-bold text-xl">8:00 - 9:30 AM</h4>
              <p className="text-gray-600">Morning Peak</p>
              <p className="text-blue-600 font-medium">520 vehicles/hr</p>
            </div>
            
            <div>
              <h4 className="text-gray-800 font-bold text-xl">5:30 - 7:00 PM</h4>
              <p className="text-gray-600">Evening Peak</p>
              <p className="text-purple-600 font-medium">480 vehicles/hr</p>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-2xl p-6 shadow-lg">
          <h3 className="text-lg font-bold text-gray-800 mb-4">Vehicle Distribution</h3>
          <div className="h-40">
            <ResponsiveContainer width="100%" height="100%">
              <PieChart>
                <Pie
                  data={pieData}
                  cx="50%"
                  cy="50%"
                  innerRadius={30}
                  outerRadius={60}
                  dataKey="value"
                >
                  {pieData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={entry.color} />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
          </div>
          <div className="grid grid-cols-3 gap-2 mt-4">
            {pieData.map((item, index) => (
              <div key={index} className="text-center">
                <div className="flex items-center justify-center mb-1">
                  <div 
                    className="w-3 h-3 rounded-full mr-2" 
                    style={{ backgroundColor: item.color }}
                  ></div>
                  <span className="text-gray-800 text-sm">{item.value}%</span>
                </div>
                <p className="text-gray-500 text-xs">{item.name}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};